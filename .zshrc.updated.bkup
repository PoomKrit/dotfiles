# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# NOTE: -- Use fd instead of fzf --
show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"
export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export XDG_CONFIG_HOME="$HOME/.config"
export EDITOR="nvim"
export KUBE_EDITOR="nvim"
export BAT_THEME=tokyonight_night
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Amazon Q pre block. Keep at the top of this file.
# [[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
# make sure ssh-agent is running
# eval "$(ssh-agent -s)" 

# adding private key for accor git repository
# ssh-add -q ~/.ssh/krittanon_accor
# ssh-add -q ~/.ssh/krittanon_accor_pci

# export OLLAMA_MODELS=/Volumes/home/Models_Assistant
# Homebrew Initialization
eval "$(/opt/homebrew/bin/brew shellenv)"
export PATH=$HOME/bin:/opt/homebrew/bin:/usr/local/bin:$HOME/.poetry/bin:$PATH
export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Theme of ZSH
# ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"

# PERF: oh-my-zsh plugins
plugins=(
  git
  bundler
  dotenv
  macos
  rake
  rbenv
  ruby
  # zsh-autosuggestions
  # zsh-syntax-highlighting
  terraform
  vscode
  aws
  alias-finder
  kubectl
  kubectx
)
# Load a few important annexes, without Turbo
# (this is currently required for annexes)

# NOTE: enabling oh-my-zsh config
source $ZSH/oh-my-zsh.sh

### NOTE: Starting of Zinit's installer chunk
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

if [ ! -d "$ZINIT_HOME" ]; then
	mkdir -p "$(dirname $ZINIT_HOME)"
	git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"

zinit ice depth=1 #wait"0" atload"_zsh_autosuggest_start"
# zinit light-mode for \
    # romkatv/powerlevel10k \
    # zdharma-continuum/zinit-annex-as-monitor \
    # zdharma-continuum/zinit-annex-bin-gem-node \
    # zdharma-continuum/zinit-annex-patch-dl \
    # zdharma-continuum/zinit-annex-rust

zinit ice silent blockf depth=1 wait"0"
zinit light zdharma-continuum/zinit-annex-as-monitor

zinit ice silent blockf depth=1 wait"0"
zinit light zdharma-continuum/zinit-annex-bin-gem-node

zinit ice silent blockf depth=1 wait"0"
zinit light zdharma-continuum/zinit-annex-patch-dl

zinit ice silent blockf depth=1 wait"0"
zinit light zdharma-continuum/zinit-annex-rust

# Add in zsh plugins
zinit light zsh-users/zsh-completions
zinit light Aloxaf/fzf-tab
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions

# Define snippets directory explicitly (optional, but recommended)
# ZINIT[SNIPPETS_DIR]=~/.local/share/zinit/snippets

# Add in snippets
# zinit ice silent blockf depth=1
# zinit snippets OMZP::git
#
# zinit ice silent blockf depth=1
# zinit snippets OMZP::sudo
#
# zinit ice silent blockf depth=1
# zinit snippets OMZP::archlinux
#
# zinit ice silent blockf depth=1
# zinit snippets OMZP::aws
#
# zinit ice silent blockf depth=1
# zinit snippets OMZP::kubectl
#
# zinit ice silent blockf depth=1
# zinit snippets OMZP::kubectx
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::bundler
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::dotenv
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::macos
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::rake
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::rbenv
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::ruby
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::terraform
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::vscode
#
# zinit ice silent blockf depth=1
# zinit snippet OMZP::alias-finder

# Load completions
autoload -Uz compinit && compinit
zinit cdreplay -q

# Completion styling
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
 
### End of Zinit's installer chunk

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# PERF: Aliases
alias tm="tmux"
alias t="tree"
alias n="nix"
alias tg="terragrunt"
alias c="cat"
alias ..="cd .."
alias vi="nvim"
alias v="nvim"
alias nvimdiff="nvim -d"
alias y="yarn"
alias lg="lazygit"
alias randA="LC_CTYPE=C tr -dc A-Z </dev/urandom | head -c 100 |xargs"
alias randAa="LC_CTYPE=C tr -dc A-Za-z </dev/urandom | head -c 100 |xargs"
alias randa="LC_CTYPE=C tr -dc a-z </dev/urandom | head -c 100 |xargs"
alias randA0="LC_CTYPE=C tr -dc A-Z0-9 </dev/urandom | head -c 100 |xargs"
alias rand0="LC_CTYPE=C tr -dc 0-9 </dev/urandom | head -c 100 |xargs"
alias randall="LC_CTYPE=C tr -dc A-Za-z0-9 </dev/urandom | head -c 100 |xargs"
alias ks='kustomize'
alias kx='kubectx'
alias kns='echo 'NAMESPACE'\\n;kubectl config view --minify -o jsonpath={..namespace};echo'
alias kcns='kubectl config set-context --current --namespace'
alias e='eksctl'
alias h='helm'
alias python='python3'
alias dk='docker'
alias pdm='podman'
alias j='jobs'

# AWS
alias a='aws'
# alias ap='eval $(/Users/poomkrit/Library/CloudStorage/SynologyDrive-scripts/aws-profile-selection.sh)'
alias ap='eval $(/Users/poomkrit/dotfiles/aws-profile-selection/aws-profile-selection.sh)'

# Git
alias gt='git tag'
alias gmj='gitmoji'
# alias gdif='git diff'

# Vault
alias vlt='vault'
# Saml2aws
alias sam='saml2aws'

# aws-login with MFA - crea
alias ali='. $HOME/git/aws-tools/aws-login.sh'

# confluent kafka
alias cflt='confluent'

# copy path to clipboard
alias yp='pwd | pbcopy ; pbpaste'

HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt sharehistory
setopt inc_append_history
setopt appendhistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
setopt rmstarsilent					# Set zsh not to confirm delete file
setopt HIST_NO_STORE             # This saves commands even if they were cancelled
# setopt incappendhistory     # Adds commands to the history file incrementally (as soon as they're executed)
# setopt extended_history     #setopt HIST_IGNORE_CANCEL
# setopt HIST_IGNORE_CANCEL

# Save cancelled commands
save_and_interrupt() {
    print -s -- "$BUFFER"  # Save the current buffer to history
    zle reset-prompt       # Clear the prompt
}
zle -N save_and_interrupt
bindkey "^C" save_and_interrupt

# source /usr/local/opt/powerlevel10k/powerlevel10k.zsh-theme

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"

# ---- Eza (better ls) -----

alias ls="eza --color=always --long --git --icons=always --no-filesize --no-time --no-user --no-permissions"
alias lsnc="eza --color=always --long --git --icons=never --no-filesize --no-time --no-user --no-permissions"
alias l="eza --all --color=always --long --git --icons=always"
# alias cd="z"

# ---- fzf (better fuzzy files manager) -----
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"


# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

source ~/github/fzf-git.sh/fzf-git.sh

# ----- Bat (better cat) -----
alias b="bat"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo ${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

# To customize prompt, run `p10k configure` or edit ~/Library/CloudStorage/SynologyDrive-scripts/.p10k.zsh.
# [[ ! -f ~/Library/CloudStorage/SynologyDrive-scripts/.p10k.zsh ]] || source ~/Library/CloudStorage/SynologyDrive-scripts/.p10k.zsh

# Make the prompt stay almost on top
# source /Users/poomkrit/github/almostontop/almostontop.plugin.zsh

# Starship
# export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
# eval "$(starship init zsh)"
